{"version":3,"sources":["components/Dashboard.js","components/ExpenseItem.js","components/ExpenseList.js","components/AddExpense.js","App.js","actions/index.js","reportWebVitals.js","reducers/expenseReducer.js","reducers/budgetReducer.js","reducers/index.js","index.js"],"names":["DashboardDiv","styled","div","BudgetTotalDiv","Dashboard","props","displayBudget","budgetTotal","className","onClick","switchBudgetMode","editBudget","htmlFor","type","name","id","min","value","newBudget","onChange","handleChange","saveNewBudget","cancelNewBudget","budgetMode","budgetRemaining","Math","abs","budgetSpent","ExpenseItemDiv","ExpenseCost","ExpenseItem","deleteExpense","useContext","UserContext","cost","ExpenseListUL","ul","ExpenseList","expenseList","searchMode","filter","e","toLowerCase","includes","inputSearch","map","replace","placeholder","style","marginTop","searchExpense","AddExpenseUL","AddExpense","inputExpenseName","inputExpenseCost","addExpense","AppDiv","createContext","App","useSelector","state","dispatch","useDispatch","useState","setBudgetMode","setInputSearch","setSearchMode","formField","setFormField","event","previousState","target","reduce","sum","Number","alert","Provider","window","confirm","parentElement","previousElementSibling","innerHTML","slice","deleteExpenseAction","mode","addExpenseAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","expenseReducer","action","idx","findIndex","budgetReducer","allReducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa3f434b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\n\nconst DashboardDiv = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-gap: 1rem;\n\n    div {\n        padding: 0 1.25rem;\n        display: flex;\n        align-items: center;\n        height: 4.5em;\n    }\n      \n    #budgetRemaining {\n        background-color: #d5eddb;\n    }\n      \n    #budgetSpent {\n        background-color: #cbe5ff;\n    }\n\n    .negative {\n        color: #ea1f25;\n    }\n\n    @media screen and (min-width: 575px) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n`;\n\nconst BudgetTotalDiv = styled.div`\n    background-color: #e1e3e4;\n    justify-content: space-between;\n    column-gap: .5rem;\n\n    input {\n        background-color: #fff;\n    }\n      \n    .fas {\n        margin-top: .4rem;\n    }\n      \n    .fa-check-circle {\n        color: #43af49;\n    }\n      \n    .fa-times-circle {\n        color: #ea1f25;\n    }\n`;\n\nfunction Dashboard(props) {\n    const displayBudget = \n        <BudgetTotalDiv>\n            Budget:&ensp;${props.budgetTotal}\n            <button className=\"formBtn\" onClick={props.switchBudgetMode}>Edit</button>\n        </BudgetTotalDiv>;\n    const editBudget = \n        <BudgetTotalDiv>\n            <label htmlFor=\"newBudget\">Budget:</label>\n            <input type=\"number\" name=\"newBudget\" id=\"newBudget\" min=\"1\" value={props.newBudget} onChange={props.handleChange} />\n            <button className=\"iconBtn\" onClick={props.saveNewBudget}><i className=\"fas fa-check-circle\"></i></button>\n            <button className=\"iconBtn\" onClick={props.cancelNewBudget}><i className='fas fa-times-circle'></i></button>\n        </BudgetTotalDiv>;\n    return (\n        <DashboardDiv>\n            {props.budgetMode ? editBudget : displayBudget}\n            {props.budgetRemaining > 0 ? <div id=\"budgetRemaining\">Remaining:&ensp;${props.budgetRemaining}</div> : <div id=\"budgetRemaining\">Remaining:&ensp;$<span className=\"negative\">({Math.abs(props.budgetRemaining)})</span></div>}\n            <div id=\"budgetSpent\">Spent so far:&ensp;${props.budgetSpent}</div>\n        </DashboardDiv>\n    );\n}\n\nexport default Dashboard;\n","import React, {useContext} from 'react';\nimport {UserContext} from './../App';\nimport styled from \"styled-components\";\n\nconst ExpenseItemDiv = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    > div {\n        display: flex;\n        column-gap: 1.25rem;\n    }\n`;\n\nconst ExpenseCost = styled.div`\n    background-color: #007dfe;\n    color: #fff;\n    height: 1.5em;\n    font-size: small;\n    position: relative;\n    display:flex;\n    align-items: center;\n\n    &::before, &::after {\n        content: \"\";\n        background-color: #007dfe;\n        border-radius: 50%;\n        position: absolute;\n        height: 1.5em;\n        width: 1.5em;\n        z-index: -1;\n    }\n\n    &::before {\n        left: -.75em;\n    }\n      \n    &::after {\n        right: -.75em;\n    }\n`;\n\nfunction ExpenseItem(props) {\n    const deleteExpense = useContext(UserContext);\n    return (\n        <ExpenseItemDiv>\n            <div>{props.name}</div>\n            <div>\n                <ExpenseCost>${props.cost}{deleteExpense}</ExpenseCost>\n                <button className=\"iconBtn\" onClick={deleteExpense}><i className='fas fa-times-circle'></i></button></div>\n        </ExpenseItemDiv>\n    );\n}\n\nexport default ExpenseItem;","import React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport styled from \"styled-components\";\n\nconst ExpenseListUL = styled.ul`\n  margin: .75rem 0 1rem;\n  list-style-type: none;\n  height: 15em;\n  overflow: auto;\n\n  li {\n    padding: .75rem;\n    border: 1px solid #e1e3e4;\n  }\n`;\n\nfunction ExpenseList(props) {\n    const list = props.searchMode ? props.expenseList.filter((e) => e.name.toLowerCase().includes(props.inputSearch.toLowerCase())) : props.expenseList;\n    const expenseList = list.map((e) => \n      <li key={e.name.toLowerCase().replace(/\\s/g, '-')}>\n        <ExpenseItem name={e.name} cost={e.cost} />\n      </li>);\n    return (\n        <div className=\"ExpenseList\">\n            <h2>Expenses</h2>\n            <input type=\"text\" name=\"inputSearch\" id=\"inputSearch\" placeholder=\"Type to search...\" style={{ marginTop: \".75rem\"}} value={props.inputSearch} onChange={props.searchExpense} />\n            <ExpenseListUL>{expenseList}</ExpenseListUL>\n        </div>\n    );\n}\n\nexport default ExpenseList;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst AddExpenseUL = styled.ul`\n    margin: .75rem 0 1rem;\n    list-style-type: none;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 1rem;\n\n    @media screen and (min-width: 575px) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n`;\n\n\nfunction AddExpense(props) {\n    return (\n        <div className=\"AddExpense\">\n            <h2>Add Expense</h2>\n            <AddExpenseUL>\n              <li>\n                  <label htmlFor=\"inputExpenseName\">Name</label>\n                  <input type=\"text\" name=\"inputExpenseName\" id=\"inputExpenseName\" value={props.inputExpenseName} onChange={props.handleChange} />\n              </li>\n              <li>\n                  <label htmlFor=\"inputExpenseCost\">Cost</label>\n                  <input type=\"number\" name=\"inputExpenseCost\" id=\"inputExpenseCost\" min=\"1\" value={props.inputExpenseCost} onChange={props.handleChange} />\n              </li>\n            </AddExpenseUL>\n            <button className=\"formBtn\" onClick={props.addExpense}>Save</button>\n        </div>\n    );\n}\n\nexport default AddExpense;","import React, {useState, createContext} from 'react';\nimport './App.css';\n\nimport Dashboard from './components/Dashboard';\nimport ExpenseList from './components/ExpenseList';\nimport AddExpense from './components/AddExpense';\n\nimport styled from \"styled-components\";\n\nimport {useSelector, useDispatch} from 'react-redux';\nimport {addExpenseAction, deleteExpenseAction, updateBudgetAction} from './actions';\n\nconst AppDiv = styled.div`\n  width: 100%;\n  margin: auto;\n\n  > * {\n    margin: 1.5rem 1rem;\n  }\n\n  @media screen and (min-width: 575px) {\n    max-width: 800px;\n  }\n`;\n\nconst UserContext = createContext();\n\nfunction App() {\n  // Redux-managed states\n  const expenseList = useSelector(state => state.expenseList);\n  const budgetTotal = useSelector(state => state.budgetTotal);\n  const dispatch = useDispatch();\n\n  // React-managed states\n  const [budgetMode, setBudgetMode] = useState(false);\n  const [inputSearch, setInputSearch] = useState(\"\");\n  const [searchMode, setSearchMode] = useState(false);\n  const [formField, setFormField] = useState({\n    newBudget: budgetTotal,\n    inputExpenseName: \"\",\n    inputExpenseCost: \"\"\n  });\n\n  const handleChange = (event) => {\n    setFormField(previousState => {\n      return {\n        ...previousState,\n        [event.target.name]: event.target.value\n      }\n    });\n  }\n\n  const switchBudgetMode = () => {\n    setBudgetMode(true);\n  }\n  \n  const saveNewBudget = () => {\n    if (Number(formField.newBudget) < 1) {\n      alert(\"Budget must be at least $1\")\n    }\n    else {\n      dispatch(updateBudgetAction(formField.newBudget));\n      setBudgetMode(false);\n    }\n  }\n  \n  const cancelNewBudget = () => {\n    setFormField(previousState => {\n      return {\n        ...previousState,\n        newBudget: budgetTotal\n      }\n    });\n    setBudgetMode(false);\n  }\n  \n  const searchExpense = (event) => {\n    const mode = event.target.value ? true : false;\n    setInputSearch(event.target.value);\n    setSearchMode(mode);\n  }\n  \n  const deleteExpense = (e) => {\n    const deleteConfirm = window.confirm(\"Are you sure you want to delete this expense?\");\n    if (deleteConfirm) {\n      const name = e.target.parentElement.parentElement.previousElementSibling.innerHTML;\n      const cost = Number(e.target.parentElement.previousElementSibling.innerHTML.slice(1));\n      dispatch(deleteExpenseAction(name, cost));\n    }\n  }\n\n  const addExpense = () => {\n    if (!formField.inputExpenseName || formField.inputExpenseCost === \"\")\n      alert(\"Cannot add expense without a name and cost\");\n    else if (Number(formField.inputExpenseCost) < 1)\n      alert(\"Cost must be at least $1\")\n    else {\n      const name = formField.inputExpenseName;\n      const cost = Number(formField.inputExpenseCost);\n      dispatch(addExpenseAction(name, cost))\n      setFormField(previousState => {\n        return {\n          ...previousState,\n          inputExpenseName: \"\",\n          inputExpenseCost: \"\"\n        }\n      });\n    }\n  }\n  const budgetSpent = expenseList.reduce((sum, e) => sum += e.cost, 0);\n  const budgetRemaining = budgetTotal - budgetSpent;\n  return (\n    <AppDiv>\n      <h1>My Budget Planner</h1>\n\n      <Dashboard budgetMode={budgetMode} newBudget={formField.newBudget} budgetTotal={budgetTotal} budgetRemaining={budgetRemaining} budgetSpent={budgetSpent} handleChange={handleChange} switchBudgetMode={switchBudgetMode} cancelNewBudget={cancelNewBudget} saveNewBudget={saveNewBudget} />\n\n      <UserContext.Provider value={deleteExpense}>\n      <ExpenseList searchMode={searchMode} inputSearch={inputSearch} expenseList={expenseList} searchExpense={searchExpense} />\n      </UserContext.Provider>\n\n      <AddExpense inputExpenseName={formField.inputExpenseName} inputExpenseCost={formField.inputExpenseCost} handleChange={handleChange} addExpense={addExpense} />\n      \n    </AppDiv>\n  );\n}\n\nexport default App;\nexport {UserContext};","export const addExpenseAction = (name, cost) => {\r\n    return {\r\n        type: 'ADD',\r\n        name, \r\n        cost\r\n    }\r\n};\r\n\r\nexport const deleteExpenseAction = (name, cost) => {\r\n    return {\r\n        type: 'DELETE',\r\n        name, \r\n        cost\r\n    }\r\n};\r\n\r\nexport const updateBudgetAction = (newBudget) => {\r\n    return {\r\n        type: 'UPDATE',\r\n        newBudget\r\n    }\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = [\r\n    {\r\n      name: \"Shopping\",\r\n      cost: 50\r\n    },\r\n    {\r\n      name: \"Vacation\",\r\n      cost: 300\r\n    },\r\n    {\r\n      name: \"Transportation\",\r\n      cost: 70\r\n    },\r\n    {\r\n      name: \"Gas\",\r\n      cost: 400\r\n    },\r\n    {\r\n      name: \"Child Care\",\r\n      cost: 500\r\n    }\r\n  ];\r\n\r\nconst expenseReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            return [...state, {name: action.name, cost: action.cost}];\r\n        case 'DELETE':\r\n            const idx = state.findIndex((e) => e.name === action.name && e.cost === action.cost);\r\n            return [...state.slice(0, idx), ...state.slice(idx + 1)];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default expenseReducer;","const budgetReducer = (state = 2000, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE':\r\n            return action.newBudget;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default budgetReducer;","import expenseReducer from './expenseReducer';\r\nimport budgetReducer from './budgetReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    expenseList: expenseReducer,\r\n    budgetTotal: budgetReducer\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {createStore} from 'redux';\nimport allReducers from './reducers';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}